---
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  MWAAs3BucketName:
    Type: String
    Description: The S3 bucket where your Airflow artifacts are stored and configured for your MWAA environment.
  
  CodeCommitRepoName:
    Type: String
    Description: The new CodeCommit repository to act as the source control for your Airflow artifacts

  CodePipelineName:
    Type: String
    Description: The new Codepipeline pipeline that would do the Continious Deployment from the CodeCommit repository to the MWAA S3 Bucket.

Resources:
    CodeCommitRepository:
        Type: AWS::CodeCommit::Repository
        Properties:
            RepositoryName: !Ref 'CodeCommitRepoName'
            RepositoryDescription: "Used for DAG development"
            Code: 
              BranchName: main
              S3:
                Bucket: !Ref MWAAs3BucketName
                Key: Artifacts.zip

    PipeilineArtifactStoreBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketEncryption: 
          ServerSideEncryptionConfiguration: 
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        VersioningConfiguration:
          Status: Enabled            
        AccessControl: Private

    PipeilineArtifactStoreBucketPolicy:
      Type: 'AWS::S3::BucketPolicy'
      Properties:
        Bucket: !Ref PipeilineArtifactStoreBucket
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Action:
              - s3:Get*
              - s3:List*
              - s3:Put*
              Effect: Allow
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref PipeilineArtifactStoreBucket
                  - /*
              Principal: 
                Service:
                  - codepipeline.amazonaws.com
                  - cloudformation.amazonaws.com
                  - codecommit.amazonaws.com
            - Action:
              - s3:*
              Effect: Deny
              Principal: '*'
              Resource: 
                - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref PipeilineArtifactStoreBucket
                      - /*
                - !Join
                    - ''
                    - - 'arn:aws:s3:::'
                      - !Ref PipeilineArtifactStoreBucket
                      - ''
              Condition:
                Bool:
                    aws:SecureTransport: 'false'
              
    CodePipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            Name: !Ref 'CodePipelineName'
            RoleArn: !GetAtt PipelineRole.Arn
            ArtifactStore: 
                Location: !Ref 'PipeilineArtifactStoreBucket'
                Type: "S3"
            Stages: 
              - Name: Source
                Actions: 
                  - Name: Source
                    ActionTypeId: 
                        Category: "Source"
                        Owner: "AWS"
                        Provider: "CodeCommit"
                        Version: "1"
                    Configuration: 
                        BranchName: "main"
                        OutputArtifactFormat: "CODE_ZIP"
                        PollForSourceChanges: false
                        RepositoryName: !Ref CodeCommitRepoName
                    Region: !Ref AWS::Region
                    OutputArtifacts:
                      - Name: SourceArtifact
                    Namespace: "SourceVariables"
                    RunOrder: 1 
              - Name: Deploy
                Actions: 
                  - Name: Deploy
                    ActionTypeId: 
                        Category: "Deploy"
                        Owner: "AWS"
                        Provider: "S3"
                        Version: "1"
                    Configuration: 
                        BucketName: !Ref 'MWAAs3BucketName'
                        Extract: true
                    Region: !Ref AWS::Region
                    InputArtifacts:
                      - Name: SourceArtifact
                    Namespace: "BuildVariables"
                    RunOrder: 1

    AmazonCloudWatchEventRule:
      Type: AWS::Events::Rule
      Properties:
        EventPattern:
          source:
            - aws.codecommit
          detail-type:
            - 'CodeCommit Repository State Change'
          resources:
            - !Join [ '', [ 'arn:aws:codecommit:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref CodeCommitRepoName ] ]
          detail:
            event:
              - referenceCreated
              - referenceUpdated
            referenceType:
              - branch
            referenceName:
              - main
        Targets:
          -
            Arn: 
              !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref CodePipelineName ] ]
            RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
            Id: codepipeline-mwaaPipeline

    AmazonCloudWatchEventRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            -
              Effect: Allow
              Principal:
                Service:
                  - events.amazonaws.com
              Action: sts:AssumeRole
        Path: /
        Policies:
          -
            PolicyName: !Sub "${AWS::StackName}-PipelineExecution-Policy"
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                -
                  Effect: Allow
                  Action: codepipeline:StartPipelineExecution
                  Resource: !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref CodePipelineName ] ] 

    PipelineRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - codepipeline.amazonaws.com
                  - cloudformation.amazonaws.com
              Action: 'sts:AssumeRole'
        Policies:
          - PolicyName: Pipeline-Policy
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action: 
                  - iam:PassRole
                  Resource: !Join [ '', [ 'arn:aws:iam::', !Ref 'AWS::AccountId', ':', "role/*" ] ] 
                - Effect: Allow
                  Action: 
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetRepository
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                  Resource: !Join [ '', [ 'arn:aws:codecommit:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref CodeCommitRepoName ] ] 
                - Effect: Allow
                  Action:
                  - s3:Get*
                  - s3:List*
                  - s3:Create*
                  - s3:Put*
                  - s3:Delete*
                  Resource: 
                    - !Join [ '', ['arn:aws:s3:::', !Ref PipeilineArtifactStoreBucket, /* ] ]
                    - !Join [ '', ['arn:aws:s3:::', !Ref MWAAs3BucketName, /* ] ]

Outputs:
  CodeCommitRepositoryName:
    Description: "CodeCommit Repository that developers will use for CI"
    Value: !Ref 'CodeCommitRepoName'
  CodePipelinePipelineName:
    Description: "CodePipeline that developers will use for CD"
    Value: !Ref CodePipeline  

